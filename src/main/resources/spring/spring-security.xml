<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <http pattern="/webjars/**" security="none"/>

    <http use-expressions="true" name="restSecurityFilterChain" create-session="stateless"
          entry-point-ref="customAuthenticationEntryPoint">
        <http-basic/>
        <intercept-url pattern="/restaurants/**" access="hasAuthority('ADMIN')"/>
        <intercept-url pattern="/votes/**" access="isAuthenticated()"/>
        <intercept-url pattern="/dailyMenus/**" access="isAuthenticated()" method="GET"/>
        <intercept-url pattern="/dailyMenus/**" access="hasAuthority('ADMIN')" method="PATCH"/>
        <intercept-url pattern="/dailyMenus" access="isAuthenticated()" method="GET"/>
        <intercept-url pattern="/dailyMenus/**" access="hasAuthority('ADMIN')" method="POST"/>
        <intercept-url pattern="/users" access="hasAuthority('ADMIN')" method="GET"/>
        <intercept-url pattern="/users/**" access="isAuthenticated()" method="GET"/>
        <intercept-url pattern="/users" access="permitAll()" method="POST"/>
        <intercept-url pattern="/users/**" access="hasAuthority('ADMIN')" method="PATCH"/>

        <intercept-url pattern="/swagger-ui.html" access="permitAll()"/>
        <intercept-url pattern="/swagger-resources/**" access="permitAll()"/>
        <intercept-url pattern="/v2/api-docs/**" access="permitAll()"/>

        <access-denied-handler ref="customAccessDeniedHandler"/>

        <csrf disabled="true"/>
    </http>

    <beans:bean name="noopEncoder" class="org.springframework.security.crypto.password.NoOpPasswordEncoder"/>

    <authentication-manager>
        <authentication-provider>
            <password-encoder ref="noopEncoder"/>
            <jdbc-user-service data-source-ref="dataSource"
                               users-by-username-query="SELECT email, password, true FROM users WHERE email = ?"
                               authorities-by-username-query="SELECT u.email, r.role FROM users u, user_roles r WHERE u.id = r.user_id AND u.email = ?"
            />
        </authentication-provider>
    </authentication-manager>

</beans:beans>